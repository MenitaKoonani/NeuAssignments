/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Business.Account;
import Business.AccountDirectory;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Menita Koonani
 */
public class ManageAccountPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewAccHistoryPanel
     */
    private AccountDirectory accountDirectory;
    private JPanel userProcessPanel;

    ManageAccountPanel(JPanel userProcessPanel, AccountDirectory accountDirectory) {
        initComponents();
        this.userProcessPanel = userProcessPanel;
        this.accountDirectory = accountDirectory;
        populateTable();
    }

    public void populateTable() {
        DefaultTableModel jTable = (DefaultTableModel) manageTable.getModel();
        //starting the population form row 0
        jTable.setRowCount(0);

        for (Account eachAccount : accountDirectory.getAccountList()) {
            Object row[] = new Object[4];
            //setting the object to the first row as we need to access all the other attributes of that particular object
            row[0] = eachAccount;
            row[1] = eachAccount.getRoutingNumber();
            row[2] = eachAccount.getBankName();
            row[3] = eachAccount.getBalance();
            jTable.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        manageTable = new javax.swing.JTable();
        viewBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        searchBtn = new javax.swing.JButton();
        searchField = new javax.swing.JTextField();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        manageTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Bank Name", "Account Number", "Routing Number", "Balance"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(manageTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(146, 131, -1, 149));

        viewBtn.setText("View");
        viewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewBtnActionPerformed(evt);
            }
        });
        add(viewBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(571, 328, 87, -1));

        backBtn.setText("<< Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });
        add(backBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 90, -1, -1));

        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });
        add(deleteBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(571, 369, 87, -1));

        searchBtn.setText("Search Account Number");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });
        add(searchBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(166, 328, -1, -1));
        add(searchField, new org.netbeans.lib.awtextra.AbsoluteConstraints(331, 329, 184, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void viewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = manageTable.getSelectedRow();
        if (selectedRow >= 0) {
            Account account = (Account) manageTable.getValueAt(selectedRow, 0);
            ViewAccountPanel viewPanel = new ViewAccountPanel(userProcessPanel, account);
            CardLayout cardLayout = (CardLayout) userProcessPanel.getLayout();
            userProcessPanel.add("ViewPanel", viewPanel);
            cardLayout.next(userProcessPanel);
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_viewBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        userProcessPanel.remove(this);
        CardLayout cardLayout = (CardLayout) userProcessPanel.getLayout();
        cardLayout.previous(userProcessPanel);
    }//GEN-LAST:event_backBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = manageTable.getSelectedRow();
        if (selectedRow >= 0) {
            int dialogBtn = JOptionPane.YES_NO_CANCEL_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(null, " Would you like to delete the selected row? ", "Warning", dialogBtn);
            if (dialogResult == JOptionPane.YES_OPTION) {
                Account account = (Account) manageTable.getValueAt(selectedRow, 0);
                accountDirectory.deleteAccount(account);
                populateTable();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        // TODO add your handling code here:
        String searchAcc = searchField.getText();
        if (!searchAcc.isEmpty()) {
            Account account = accountDirectory.searchAccount(searchAcc);
            if (account == null) {
                JOptionPane.showMessageDialog(null, "Account does not exist!", "Warning", JOptionPane.WARNING_MESSAGE);
            } else {
                ViewAccountPanel viewPanel = new ViewAccountPanel(userProcessPanel, account);
                CardLayout cardLayout = (CardLayout) userProcessPanel.getLayout();
                userProcessPanel.add("SearchPanel", viewPanel);
                cardLayout.next(userProcessPanel);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please enter account number to search.", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_searchBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable manageTable;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTextField searchField;
    private javax.swing.JButton viewBtn;
    // End of variables declaration//GEN-END:variables
}
