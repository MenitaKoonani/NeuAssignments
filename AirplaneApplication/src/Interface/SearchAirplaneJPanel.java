/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Airplane.Airplane;
import Airplane.AirplaneCatalog;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Menita Koonani
 */
public class SearchAirplaneJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SearchAirplaneJPanel
     */
    private AirplaneCatalog airplaneCatalog;
    private int searchCriteria;

    public SearchAirplaneJPanel(AirplaneCatalog airplaneCatalog, int searchCriteria) {
        initComponents();
        this.airplaneCatalog = airplaneCatalog;
        this.searchCriteria = searchCriteria;
        if (searchCriteria == 2) {
            ArrayList<Airplane> airplaneList = airplaneCatalog.getAvailableAirplanes();
            searchAirplaneQueryField.setVisible(false);
            searchBtn.setVisible(false);
            searchAirplaneQueryLabel.setVisible(false);
            searchPanelHeader.setText("List of available airplanes!");
            if (airplaneList != null) {
                populateTable(airplaneList);
                searchResultCountField.setText(String.valueOf(airplaneList.size()));
            }
        }
    }

    public void searchByCriteria() {
        ArrayList<Airplane> airplaneList = new ArrayList();
        switch (searchCriteria) {
            // Made by manufacture 
            case 3:
                String findManufacturer = searchAirplaneQueryField.getText();
                airplaneList = airplaneCatalog.getAirplaneManufacturer(findManufacturer);
                if (airplaneList != null && !airplaneList.isEmpty()) {
                    searchPanelHeader.setText("List of airplanes manufactured by " + findManufacturer);
                } else {
                    JOptionPane.showMessageDialog(null, "No airplanes manufactured by " + findManufacturer);
                }
                break;
            // by manufactured year
            case 4:
                int findYear = Integer.parseInt(searchAirplaneQueryField.getText());
                if (findYear <= 2017 && findYear >= 1990) {
                    airplaneList = airplaneCatalog.getAiplaneByManuYear(findYear);
                    if (airplaneList != null && !airplaneList.isEmpty()) {
                        searchPanelHeader.setText("List of airplanes manufactured in " + findYear);
                    } else {
                        JOptionPane.showMessageDialog(null, "No airplanes were manufactured in " + findYear);
                    }
                }
                break;
        }
        if (airplaneList != null) {
            populateTable(airplaneList);
            searchResultCountField.setText(String.valueOf(airplaneList.size()));
        }
    }

    public void populateTable(ArrayList<Airplane> airplaneList) {
        DefaultTableModel airplaneTable = (DefaultTableModel) searchAirplaneTable.getModel();
        airplaneTable.setNumRows(0);
        //starting the population form row 0
        airplaneTable.setRowCount(0);
        for (Airplane eachAirplane : airplaneList) {
            Object row[] = new Object[3];
            //setting the object to the first row as we need to access all the other attributes of that particular object
            row[0] = eachAirplane;
            row[1] = eachAirplane.getAirplaneName();
            row[2] = eachAirplane.getSeatsAvailable();
            airplaneTable.addRow(row);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        searchAirplaneQueryField = new javax.swing.JTextField();
        searchAirplaneQueryLabel = new javax.swing.JLabel();
        searchBtn = new javax.swing.JButton();
        searchPanelHeader = new javax.swing.JLabel();
        searchScrollPane = new javax.swing.JScrollPane();
        searchAirplaneTable = new javax.swing.JTable();
        viewDetailsBtn = new javax.swing.JButton();
        serialNumberLabel = new javax.swing.JLabel();
        serailNumberField = new javax.swing.JTextField();
        modelNumberLabel = new javax.swing.JLabel();
        modelNumberField = new javax.swing.JTextField();
        airplaneNameLabel = new javax.swing.JLabel();
        airplaneNameField = new javax.swing.JTextField();
        airplaneAvailableLabel = new javax.swing.JLabel();
        manufacturerNameLabel = new javax.swing.JLabel();
        manufacturerNameField = new javax.swing.JTextField();
        yearManuLabel = new javax.swing.JLabel();
        seatsAvailLabel = new javax.swing.JLabel();
        airportNameLabel = new javax.swing.JLabel();
        airportNameField = new javax.swing.JTextField();
        planeAvailableField = new javax.swing.JTextField();
        yearManuField = new javax.swing.JTextField();
        seatsAvailField = new javax.swing.JTextField();
        searchResultCountLabel = new javax.swing.JLabel();
        searchResultCountField = new javax.swing.JTextField();

        searchAirplaneQueryLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        searchAirplaneQueryLabel.setText("Enter search query:");

        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        searchPanelHeader.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        searchPanelHeader.setText("Airplane Details");

        searchAirplaneTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Airplane Serial Number", "Airplane Name", "Seats available"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        searchScrollPane.setViewportView(searchAirplaneTable);

        viewDetailsBtn.setText("View Details");
        viewDetailsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewDetailsBtnActionPerformed(evt);
            }
        });

        serialNumberLabel.setText("Airplane Serial  Number:");

        serailNumberField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        modelNumberLabel.setText("Airplane Model Number:");

        airplaneNameLabel.setText("Airplane Name:");

        airplaneAvailableLabel.setText("Is the airplane available:");

        manufacturerNameLabel.setText("Airplane manufacturer name:");

        yearManuLabel.setText("Year of manufacture:");

        seatsAvailLabel.setText("Number of seats available:");

        airportNameLabel.setText("Airport Name:");

        searchResultCountLabel.setText("Number of Airplanes found: ");

        searchResultCountField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchResultCountFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(searchPanelHeader)
                .addGap(290, 290, 290))
            .addGroup(layout.createSequentialGroup()
                .addGap(150, 150, 150)
                .addComponent(searchScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(404, 404, 404)
                                .addComponent(viewDetailsBtn)
                                .addGap(268, 268, 268))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(174, 174, 174)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(yearManuLabel)
                                            .addComponent(manufacturerNameLabel)
                                            .addComponent(seatsAvailLabel)
                                            .addComponent(airportNameLabel))
                                        .addGap(64, 64, 64)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(manufacturerNameField)
                                            .addComponent(yearManuField, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(airportNameField)
                                            .addComponent(seatsAvailField, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(airplaneNameLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(airplaneAvailableLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addGap(64, 64, 64)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(planeAvailableField, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(airplaneNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(serialNumberLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(modelNumberLabel))
                                        .addGap(64, 64, 64)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(modelNumberField)
                                            .addComponent(serailNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(172, 172, 172)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGap(150, 150, 150)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(searchBtn)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(searchAirplaneQueryLabel)
                                    .addGap(31, 31, 31)
                                    .addComponent(searchAirplaneQueryField, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(200, 200, 200)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(163, 163, 163)
                        .addComponent(searchResultCountLabel)
                        .addGap(18, 18, 18)
                        .addComponent(searchResultCountField, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchAirplaneQueryField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchAirplaneQueryLabel))
                .addGap(18, 18, 18)
                .addComponent(searchBtn)
                .addGap(3, 3, 3)
                .addComponent(searchPanelHeader)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchResultCountLabel)
                    .addComponent(searchResultCountField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(searchScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(viewDetailsBtn)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(serialNumberLabel)
                    .addComponent(serailNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modelNumberLabel)
                    .addComponent(modelNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(airplaneNameLabel)
                    .addComponent(airplaneNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(airplaneAvailableLabel)
                    .addComponent(planeAvailableField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(manufacturerNameLabel)
                    .addComponent(manufacturerNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(yearManuLabel)
                    .addComponent(yearManuField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(seatsAvailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seatsAvailLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(airportNameLabel)
                    .addComponent(airportNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        // TODO add your handling code here:
        searchByCriteria();
    }//GEN-LAST:event_searchBtnActionPerformed

    private void viewDetailsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewDetailsBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = searchAirplaneTable.getSelectedRow();
        if (selectedRow >= 0) {
            Airplane airplane = (Airplane) searchAirplaneTable.getValueAt(selectedRow, 0);
            serailNumberField.setText(String.valueOf(airplane.getSerialNumber()));
            modelNumberField.setText(String.valueOf(airplane.getModelNumber()));
            airplaneNameField.setText(String.valueOf(airplane.getAirplaneName()));
            planeAvailableField.setText(airplane.isAvailable() ? "Yes! The airplane is available" : "No sorry! The airplane is unavailable");
            manufacturerNameField.setText(String.valueOf(airplane.getManufacturerName()));
            yearManuField.setText(String.valueOf(airplane.getYearOfManufacture()));
            seatsAvailField.setText(String.valueOf(airplane.getSeatsAvailable()));
            airportNameField.setText(String.valueOf(airplane.getAirportName()));
            
            isEditable(false);
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row!!");
        }
    }//GEN-LAST:event_viewDetailsBtnActionPerformed
    public void isEditable(boolean isEditable) {
        serailNumberField.setEditable(isEditable);
        modelNumberField.setEditable(isEditable);
        airplaneNameField.setEditable(isEditable);
        planeAvailableField.setEditable(isEditable);
        serailNumberField.setEditable(isEditable);
        yearManuField.setEditable(isEditable);
        seatsAvailField.setEditable(isEditable);
        airportNameField.setEditable(isEditable);
    }
    private void searchResultCountFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchResultCountFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchResultCountFieldActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel airplaneAvailableLabel;
    private javax.swing.JTextField airplaneNameField;
    private javax.swing.JLabel airplaneNameLabel;
    private javax.swing.JTextField airportNameField;
    private javax.swing.JLabel airportNameLabel;
    private javax.swing.JTextField manufacturerNameField;
    private javax.swing.JLabel manufacturerNameLabel;
    private javax.swing.JTextField modelNumberField;
    private javax.swing.JLabel modelNumberLabel;
    private javax.swing.JTextField planeAvailableField;
    private javax.swing.JTextField searchAirplaneQueryField;
    private javax.swing.JLabel searchAirplaneQueryLabel;
    private javax.swing.JTable searchAirplaneTable;
    private javax.swing.JButton searchBtn;
    private javax.swing.JLabel searchPanelHeader;
    private javax.swing.JTextField searchResultCountField;
    private javax.swing.JLabel searchResultCountLabel;
    private javax.swing.JScrollPane searchScrollPane;
    private javax.swing.JTextField seatsAvailField;
    private javax.swing.JLabel seatsAvailLabel;
    private javax.swing.JTextField serailNumberField;
    private javax.swing.JLabel serialNumberLabel;
    private javax.swing.JButton viewDetailsBtn;
    private javax.swing.JTextField yearManuField;
    private javax.swing.JLabel yearManuLabel;
    // End of variables declaration//GEN-END:variables
}
