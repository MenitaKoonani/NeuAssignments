/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.ManageFlights;

import Business.Flight;
import Business.TravelAgency;
import UserInterface.BookFlightPanel;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Menita Koonani
 */
public class SearchFlightsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SearchFlightsJPanel
     */
    private javax.swing.JPanel CardSequenceJPanel;
    private TravelAgency travelAgency;

    public SearchFlightsJPanel(javax.swing.JPanel CardSequenceJPanel, TravelAgency travelAgency) {
        initComponents();
        this.CardSequenceJPanel = CardSequenceJPanel;
        this.travelAgency = travelAgency;
        populateSearchFlightTable(travelAgency.getAllFlights());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        soruceSearch = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        maxPriceSearch = new javax.swing.JTextField();
        searchFlightBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        searchFlightsTable = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        destSearch = new javax.swing.JTextField();
        bookFlightBtn = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Search and Book Flights ");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 750, 40));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Source : ");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 80, 70, 20));
        add(soruceSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 80, 120, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Destination : ");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(73, 120, 90, 20));
        add(maxPriceSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 160, 120, -1));

        searchFlightBtn.setBackground(new java.awt.Color(0, 153, 153));
        searchFlightBtn.setText("Search");
        searchFlightBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFlightBtnActionPerformed(evt);
            }
        });
        add(searchFlightBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 120, 110, 30));

        searchFlightsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Flight ID", "Flight Name", "Source", "Destination", "Departure Date", "Departure Time", "Price of a ticket"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(searchFlightsTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 730, 190));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Select Max Price : ");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 160, 110, 20));
        add(destSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 120, 120, -1));

        bookFlightBtn.setBackground(new java.awt.Color(0, 153, 153));
        bookFlightBtn.setText("Book Flight");
        bookFlightBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookFlightBtnActionPerformed(evt);
            }
        });
        add(bookFlightBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 440, 200, -1));
    }// </editor-fold>//GEN-END:initComponents

    public void populateSearchFlightTable(ArrayList<Flight> flightList) {
        DefaultTableModel jTable = (DefaultTableModel) searchFlightsTable.getModel();
        //starting the population form row 0
        jTable.setRowCount(0);

        for (Flight eachFlight : flightList) {
            Object row[] = new Object[7];
            //setting the object to the first row as we need to access all the other attributes of that particular object
            row[0] = eachFlight;
            row[1] = eachFlight.getFlightName();
            row[2] = eachFlight.getSchedule().getSourceLocation();
            row[3] = eachFlight.getSchedule().getDestLocation();
            row[4] = eachFlight.getSchedule().getDepartureDate();
            row[5] = eachFlight.getSchedule().getDepartureTime();
            row[6] = "$ " + eachFlight.getSchedule().getPrice();
            jTable.addRow(row);
        }
    }

    private void searchFlightBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFlightBtnActionPerformed
        // TODO add your handling code here:
        try {

            ArrayList<Flight> flightList = travelAgency.getAllFlights();

            String sourceSearch = soruceSearch.getText();
            if (!sourceSearch.isEmpty()) {
                flightList = travelAgency.getAirlinerDirectory().getFlightsBySource(sourceSearch, flightList);
            }
            String destSearch = this.destSearch.getText();
            if (!destSearch.isEmpty()) {
                flightList = travelAgency.getAirlinerDirectory().getFlightsByDestination(destSearch, flightList);
            }
            if (!maxPriceSearch.getText().isEmpty()) {
                float maxPrice = Float.parseFloat(String.valueOf(maxPriceSearch.getText()));
                flightList = travelAgency.getAirlinerDirectory().getFlightsByMaxPrice(maxPrice, flightList);
            }
            if (!flightList.isEmpty()) {
                populateSearchFlightTable(flightList);
            } else {
                JOptionPane.showMessageDialog(null, "No flights in the specified search!!", "Warning", JOptionPane.WARNING_MESSAGE);
            }
        } catch (NumberFormatException num) {
            JOptionPane.showMessageDialog(null, "Enter only numbers in max price search field!", "Warning", JOptionPane.WARNING_MESSAGE);

        }

    }//GEN-LAST:event_searchFlightBtnActionPerformed

    private void bookFlightBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookFlightBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = searchFlightsTable.getSelectedRow();
        if (selectedRow >= 0) {
            Flight flight = (Flight) searchFlightsTable.getValueAt(selectedRow, 0);
            BookFlightPanel bookFlightPanel = new BookFlightPanel(CardSequenceJPanel, flight);
            CardLayout cardLayout = (CardLayout) CardSequenceJPanel.getLayout();
            CardSequenceJPanel.add("BookFlightPanel", bookFlightPanel);
            cardLayout.next(CardSequenceJPanel);
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_bookFlightBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bookFlightBtn;
    private javax.swing.JTextField destSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField maxPriceSearch;
    private javax.swing.JButton searchFlightBtn;
    private javax.swing.JTable searchFlightsTable;
    private javax.swing.JTextField soruceSearch;
    // End of variables declaration//GEN-END:variables
}
