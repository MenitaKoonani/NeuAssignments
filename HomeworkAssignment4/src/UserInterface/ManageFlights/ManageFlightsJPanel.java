/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.ManageFlights;

import Business.Airliner;
import Business.Flight;
import Business.AirlinerDirectory;
import UserInterface.ManageAirliners.ManageAirlinersJPanel;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Menita Koonani
 */
public class ManageFlightsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageFlightsJPanel
     */
    private AirlinerDirectory airlinerDirectory;
    private javax.swing.JPanel CardSequenceJPanel;

    public ManageFlightsJPanel(javax.swing.JPanel CardSequenceJPanel, AirlinerDirectory airlinerDirectory) {
        initComponents();
        this.CardSequenceJPanel = CardSequenceJPanel;
        this.airlinerDirectory = airlinerDirectory;
        populateManageFlightPanel();
    }

    public void populateManageFlightPanel() {
        populateAirlinerDropdown();
        populateManageFlightsTable(airlinerDirectory.getAllFlightsList());
    }

    public void populateAirlinerDropdown() {
        chooseAirlinerDropdown.removeAllItems();
        chooseAirlinerDropdown.addItem("Select");
        ArrayList<Airliner> airlinerList = airlinerDirectory.getAirlinerList();
        for (Airliner eachAirliner : airlinerList) {
            chooseAirlinerDropdown.addItem(eachAirliner.getAirlinerName());
        }
    }

    public void populateManageFlightsTable(ArrayList<Flight> flightList) {
        DefaultTableModel jTable = (DefaultTableModel) manageFlightsTable.getModel();
        //starting the population form row 0
        jTable.setRowCount(0);

        flightList = flightList.isEmpty() || flightList == null ? airlinerDirectory.getAllFlightsList() : flightList;
        for (Flight eachFlight : flightList) {
            Object row[] = new Object[6];
            //setting the object to the first row as we need to access all the other attributes of that particular object
            row[0] = eachFlight.getAirlinerName();
            row[1] = eachFlight;
            row[2] = eachFlight.getFlightName();
            row[3] = eachFlight.getSchedule().getSourceLocation();
            row[4] = eachFlight.getSchedule().getDestLocation();
            row[5] = eachFlight.getSeatAvailable();
            jTable.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mangeFlightsLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        chooseAirlinerDropdown = new javax.swing.JComboBox<>();
        listFlightsBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        manageFlightsTable = new javax.swing.JTable();
        newFlightBtn = new javax.swing.JButton();
        viewFlightBtn = new javax.swing.JButton();
        sourceLocField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        destLocField = new javax.swing.JTextField();
        mangageFlightBackBtn = new javax.swing.JButton();
        listAllFlights = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        mangeFlightsLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        mangeFlightsLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mangeFlightsLabel.setText("Manage Flights");
        mangeFlightsLabel.setToolTipText("");
        add(mangeFlightsLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 810, 30));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Choose airliner : ");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 370, 130, 30));

        chooseAirlinerDropdown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select" }));
        chooseAirlinerDropdown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseAirlinerDropdownActionPerformed(evt);
            }
        });
        add(chooseAirlinerDropdown, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 370, 170, 30));

        listFlightsBtn.setBackground(new java.awt.Color(0, 153, 153));
        listFlightsBtn.setText("Search flights");
        listFlightsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listFlightsBtnActionPerformed(evt);
            }
        });
        add(listFlightsBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 410, 110, 30));

        manageFlightsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Airliner Name", "Flight Id", "Flight Name", "Source", "Destination", "Seats Available"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        manageFlightsTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jScrollPane1.setViewportView(manageFlightsTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 810, 240));

        newFlightBtn.setBackground(new java.awt.Color(0, 153, 153));
        newFlightBtn.setText("New Flight >>");
        newFlightBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newFlightBtnActionPerformed(evt);
            }
        });
        add(newFlightBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 370, 130, 30));

        viewFlightBtn.setBackground(new java.awt.Color(0, 153, 153));
        viewFlightBtn.setText("View Flight >>");
        viewFlightBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewFlightBtnActionPerformed(evt);
            }
        });
        add(viewFlightBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 410, 130, 30));
        add(sourceLocField, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 420, 170, 30));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Enter Source Location : ");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 420, 140, 30));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Enter Destination : ");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 470, 140, 30));
        add(destLocField, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 470, 170, 30));

        mangageFlightBackBtn.setBackground(new java.awt.Color(0, 153, 153));
        mangageFlightBackBtn.setText("<< Back");
        mangageFlightBackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mangageFlightBackBtnActionPerformed(evt);
            }
        });
        add(mangageFlightBackBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 80, 30));

        listAllFlights.setBackground(new java.awt.Color(0, 153, 153));
        listAllFlights.setText("List All Flights");
        listAllFlights.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listAllFlightsActionPerformed(evt);
            }
        });
        add(listAllFlights, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 410, 130, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void chooseAirlinerDropdownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseAirlinerDropdownActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chooseAirlinerDropdownActionPerformed

    private void listFlightsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listFlightsBtnActionPerformed
        // TODO add your handling code here:
        String airlinerName = chooseAirlinerDropdown.getSelectedItem().toString();
        String sourceLoc = sourceLocField.getText();
        String destLoc = destLocField.getText();

        if (airlinerName.equalsIgnoreCase("Select") && sourceLoc.isEmpty() && destLoc.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Search by atleast one filter!", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            ArrayList<Flight> flightList = new ArrayList<>();
            if (!airlinerName.equalsIgnoreCase("Select")) {
                Airliner selectedAirliner = airlinerDirectory.getAirlinerByName(airlinerName);
                flightList = selectedAirliner.getFleet().getFlightList();
            } else {
                flightList = airlinerDirectory.getAllFlightsList();
            }
            if (!sourceLoc.isEmpty()) {
                flightList = airlinerDirectory.getFlightsBySource(sourceLoc, flightList);
            }
            if (!destLoc.isEmpty()) {
                flightList = airlinerDirectory.getFlightsByDestination(destLoc, flightList);
            }
            if (!flightList.isEmpty()) {
                populateManageFlightsTable(flightList);
            } else {
                JOptionPane.showMessageDialog(null, "No flights found with this search filter!", "Warning", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_listFlightsBtnActionPerformed

    private void newFlightBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newFlightBtnActionPerformed
        // TODO add your handling code here:
        CreateNewFlightJPanel newFlightPanel = new CreateNewFlightJPanel(CardSequenceJPanel, airlinerDirectory);
        CardLayout cardLayout = (CardLayout) CardSequenceJPanel.getLayout();
        CardSequenceJPanel.add("NewFlightPanel", newFlightPanel);
        cardLayout.next(CardSequenceJPanel);
    }//GEN-LAST:event_newFlightBtnActionPerformed

    private void viewFlightBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewFlightBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = manageFlightsTable.getSelectedRow();
        if (selectedRow >= 0) {
            Flight selectedFlight = (Flight) manageFlightsTable.getValueAt(selectedRow, 1);
            ViewFlightsJPanel viewFlightPanel = new ViewFlightsJPanel(CardSequenceJPanel, selectedFlight);
            CardLayout cardLayout = (CardLayout) CardSequenceJPanel.getLayout();
            CardSequenceJPanel.add("ViewFlightPanel", viewFlightPanel);
            cardLayout.next(CardSequenceJPanel);
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_viewFlightBtnActionPerformed

    private void mangageFlightBackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mangageFlightBackBtnActionPerformed
        // TODO add your handling code here:
        CardSequenceJPanel.remove(this);
        Component[] componentArray = CardSequenceJPanel.getComponents();
        Component component = componentArray[componentArray.length - 1];
        ManageAirlinersJPanel manageAirlinerPanel = (ManageAirlinersJPanel) component;
        manageAirlinerPanel.populateManageAirlinerTable();
        CardLayout cardLayout = (CardLayout) CardSequenceJPanel.getLayout();
        cardLayout.previous(CardSequenceJPanel);
    }//GEN-LAST:event_mangageFlightBackBtnActionPerformed

    private void listAllFlightsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listAllFlightsActionPerformed
        // TODO add your handling code here:
        sourceLocField.setText("");
        destLocField.setText((""));
        populateManageFlightsTable(airlinerDirectory.getAllFlightsList());
    }//GEN-LAST:event_listAllFlightsActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> chooseAirlinerDropdown;
    private javax.swing.JTextField destLocField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton listAllFlights;
    private javax.swing.JButton listFlightsBtn;
    private javax.swing.JTable manageFlightsTable;
    private javax.swing.JButton mangageFlightBackBtn;
    private javax.swing.JLabel mangeFlightsLabel;
    private javax.swing.JButton newFlightBtn;
    private javax.swing.JTextField sourceLocField;
    private javax.swing.JButton viewFlightBtn;
    // End of variables declaration//GEN-END:variables
}
