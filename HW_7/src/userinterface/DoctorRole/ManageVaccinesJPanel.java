/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.DoctorRole;

import Business.Disease.Disease;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.HospitalEnterprise;
import Business.Vaccine.Vaccine;
import Business.VaccineQueue.RequestVaccine;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Menita Koonani
 */
public class ManageVaccinesJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private HospitalEnterprise enterprise;
    private EcoSystem system;

    /**
     * Creates new form ManageVaccinesJPanel
     */
    public ManageVaccinesJPanel(JPanel userProcessContainer, HospitalEnterprise enterprise, EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.system = system;
        populateDiseaseComboBox();
        populateHospitalInventory();
        populateVaccineTable(String.valueOf(diseaseComboBox.getSelectedItem()));
    }

    public void populateVaccineTable(String disease) {
        DefaultTableModel jTable = (DefaultTableModel) diseaseVaccineTable.getModel();
        jTable.setRowCount(0);
        for (Vaccine eachVaccine : enterprise.getVaccineInventory().getVaccineList()) {
            if (eachVaccine.getDisease().getDiseaseName().equalsIgnoreCase(disease)) {
                Object[] row = new Object[2];
                row[0] = eachVaccine.getDisease();
                row[1] = eachVaccine;
                jTable.addRow(row);
            }
        }
    }

    public void populateHospitalInventory() {
        for (RequestVaccine request : system.getWorkQueue().getWorkRequestList()) {
            if (request.getStatus().equalsIgnoreCase("Completed")) {
                enterprise.getVaccineInventory().newVaccine(request.getVaccine());
            }
        }
    }

    public void populateDiseaseComboBox() {
        diseaseComboBox.removeAllItems();
        for (Disease eachDisease : system.getDiseaseCatalog().getDiseaseList()) {
            diseaseComboBox.addItem(String.valueOf(eachDisease));
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        diseaseComboBox = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        diseaseVaccineTable = new javax.swing.JTable();
        backBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Disease : ");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 120, 90, 20));

        diseaseComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diseaseComboBoxActionPerformed(evt);
            }
        });
        add(diseaseComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 120, 170, -1));

        diseaseVaccineTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Disease", "Vaccine"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(diseaseVaccineTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 160, -1, 110));

        backBtn.setText("<< Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });
        add(backBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 350, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Manage Clinic Vaccine Catalog");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 40, 320, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        userProcessContainer.remove(this);
        CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
        cardLayout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed

    private void diseaseComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diseaseComboBoxActionPerformed
        populateVaccineTable(String.valueOf(diseaseComboBox.getSelectedItem()));
    }//GEN-LAST:event_diseaseComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JComboBox<String> diseaseComboBox;
    private javax.swing.JTable diseaseVaccineTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
